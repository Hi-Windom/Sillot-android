plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "io.sentry.android.gradle" version "3.5.0"
}

final int vC = 10003

android {
    compileSdkVersion 33
    buildToolsVersion '33.0.2'

//    buildFeatures {
//        dataBinding true // 数据绑定
//    }

    defaultConfig {
        applicationId "sc.windom.sillot"
        minSdk 30
        targetSdkVersion 33
        versionCode vC
        versionName "0.23"

        ndk {
            //只接入对应 cpu 类型的 .so 库。
            abiFilters 'arm64-v8a','x86','x86_64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                //JPush 上注册的包名对应的 Appkey.
                JPUSH_APPKEY : "737a606890201619d17999c7",
                //暂时填写默认值即可.
                JPUSH_CHANNEL : "developer-default",
        ]
    }


    // 自定义打包名称
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def versionType = variant.buildType.name
            if (versionType.equalsIgnoreCase("release")) {
                outputFileName = "Sillot-v${versionName}_${genDate()}_syv2.8.5.apk"
            } else {
                outputFileName = "Sillot.apk"
            }
        }
    }


    buildTypes {
        action { // 防止第三方库debug模式导致action失败
//            applicationIdSuffix ".debug"
            versionNameSuffix ".${vC}${genDateTime()}" // versionCode 一样也可以更新
            resValue "string","app_name","汐洛测试版"
            manifestPlaceholders = [
                    provider_name : "sc.windom.sillot.app.provider.debug",  // 暂时用不上
            ]
            jniDebuggable false
            renderscriptDebuggable true
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            matchingFallbacks = ['release'] // 第三方库处理
        }
        debug {
            versionNameSuffix ".${vC}${genDateTime()}" // versionCode 一样也可以更新
            resValue "string","app_name","汐洛测试版"
        }
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            versionNameSuffix ".${vC}"
            resValue "string","app_name","汐洛"
            manifestPlaceholders = [
                    provider_name : "sc.windom.sillot.app.provider.release",  // 暂时用不上
            ]
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES',
                         'META-INF/LICENSE',
                         'META-INF/LICENSE.txt',
                         'META-INF/license.txt',
                         'META-INF/NOTICE',
                         'META-INF/NOTICE.txt',
                         'META-INF/notice.txt',
                         'plugin.properties']
        }
    }

    lint {
        abortOnError false
    }
    namespace 'org.b3log.siyuan'
    ndkVersion '25.2.9519653'
}

static def genDate() {
    return new Date().format("yyyyMMdd")
}
static def genDateTime() {
    return new Date().format("yyMMddHHmm")
}
dependencies {
    // Sillot 仅需兼容 Android 11+ ，放心升级，无需理会下面的不要升级警告
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.lifecycle:lifecycle-process:2.6.1'
    implementation 'androidx.work:work-runtime:2.8.1'

    implementation(name: 'kernel', ext: 'aar')
    implementation(name: 'baidu-push-sdk-8.2.9.3', ext: 'aar')

    implementation("commons-io:commons-io:2.11.0") // 不要升级v2.5+，否则无法兼容 Android 7
    implementation("com.squareup.okhttp3:okhttp:4.9.3") // 不要升级v4.9+，否则无法兼容 Android 7
    implementation 'com.gitee.zackratos:UltimateBarX:0.8.0'
    implementation 'com.blankj:utilcodex:1.31.1'

//    极光推送
    implementation 'cn.jiguang.sdk:jcore:4.2.0'
    implementation 'cn.jiguang.sdk:jpush:5.0.0'

    implementation 'com.tencent:mmkv:1.2.15'
    implementation 'com.tencent.wcdb:wcdb-android:1.1-19'
    annotationProcessor 'androidx.room:room-compiler:2.5.1'
    // Don't forget to include Room annotation compiler from Google.

    // For developers using AndroidX in their applications
    implementation 'pub.devrel:easypermissions:3.0.0'

    // For developers using the Android Support Library
    implementation 'pub.devrel:easypermissions:3.0.0'
    implementation 'androidx.core:core-ktx:1.10.0'

    implementation 'io.reactivex.rxjava3:rxandroid:3.0.2'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    // (see https://github.com/ReactiveX/RxJava/releases for latest 3.x.x version)
    implementation 'io.reactivex.rxjava3:rxjava:3.1.6'
    implementation "io.reactivex.rxjava3:rxkotlin:3.0.1"

//    annotationProcessor 'com.android.databinding:compiler:3.1.4' // 数据绑定

    implementation 'com.tencent.bugly:crashreport:4.1.9.2'
    implementation 'com.iqiyi.xcrash:xcrash-android-lib:3.1.0'

    implementation 'com.microsoft.clarity:clarity:1.2.2'
//    存在 Duplicate class bug，等新版修复再使用
}
