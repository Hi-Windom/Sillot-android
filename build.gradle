// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        siyuanVersionCode = 230
        siyuanVersionName = "3.0.10"
    }
    def  kotlin_v = '1.9.23'  // 需要对齐 Compose Compiler  版本  REF https://developer.android.com/jetpack/androidx/releases/compose-kotlin?hl=zh-cn
    // kotlin_v 设为 1.9+ 会报错 Inconsistent JVM-target compatibility detected for tasks 'compileDebugJavaWithJavac' (17) and 'kaptGenerateStubsDebugKotlin' (1.8).
    ext {
        kotlin_version = kotlin_v
    }
    repositories { // 这个块定义了用于Gradle脚本自身执行的仓库。这意味着它用于加载Gradle插件和它们的依赖项，而不是项目本身的依赖项。
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven {url 'https://developer.huawei.com/repo/'}
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:8.3.1" // 8.0+ 需要 JDK 17+
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_v}"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
plugins {
    id 'io.realm.kotlin' version '1.11.0' apply false
}
allprojects {
    repositories {
        // 阿里云Maven中央仓库下载源
        // https://developer.aliyun.com/mvn/guide?spm=a2c6h.13651104.0.0.435836a4Lghjtb
        maven { url 'https://maven.aliyun.com/repository/google' }
//        maven { url 'https://maven.aliyun.com/repository/public' } // 不许用，不然满江红
        maven { url 'https://jitpack.io' }
        // 不在GitHub Actions中使用的仓库配置
        if (!System.getenv().containsKey('CI')) {
            maven { url 'https://mirrors.tencent.com/nexus/repository/maven-public/' }
        }
        maven {url 'https://developer.huawei.com/repo/'}
        google()
        mavenCentral()
    }
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}

tasks.withType(JavaCompile).configureEach {
    // Try to turn them all off automatically
    options.compilerArgs << '-Xlint:none'
    options.compilerArgs << '-nowarn' // same as '-Xlint:none'

    // Turn them off manually
    options.compilerArgs << '-Xlint:-auxiliaryclass'
    options.compilerArgs << '-Xlint:-cast'
    options.compilerArgs << '-Xlint:-classfile'
    options.compilerArgs << '-Xlint:-deprecation'
    options.compilerArgs << '-Xlint:-dep-ann'
    options.compilerArgs << '-Xlint:-divzero'
    options.compilerArgs << '-Xlint:-empty'
    options.compilerArgs << '-Xlint:-fallthrough'
    options.compilerArgs << '-Xlint:-finally'
    options.compilerArgs << '-Xlint:-options'
    options.compilerArgs << '-Xlint:-overloads'
    options.compilerArgs << '-Xlint:-overrides'
    options.compilerArgs << '-Xlint:-path'
    options.compilerArgs << '-Xlint:-processing'
    options.compilerArgs << '-Xlint:-rawtypes'
    options.compilerArgs << '-Xlint:-serial'
    options.compilerArgs << '-Xlint:-static'
    options.compilerArgs << '-Xlint:-try'
    options.compilerArgs << '-Xlint:-unchecked'
    options.compilerArgs << '-Xlint:-varargs'
}